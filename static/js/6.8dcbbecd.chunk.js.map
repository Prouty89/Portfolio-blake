{"version":3,"sources":["assets/Trees.svg","components/Contact.js"],"names":["module","exports","FormikContactForm","withFormik","mapPropsToValues","name","company","phone","email","message","validationSchema","Yup","shape","max","required","handleSubmit","values","axios","post","then","res","status","catch","err","className","placeholder","type","input","src","Trees"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,mC,iCCA3C,wGAwCA,IAAMC,EAAoBC,YAAW,CACjCC,iBADiC,YAE7B,MAAO,CACHC,KAFiD,EAAvCA,MAEI,GACdC,QAHiD,EAAjCA,SAGI,GACpBC,MAJiD,EAAxBA,OAIT,GAChBC,MALiD,EAAjBA,OAKhB,GAChBC,QANiD,EAAVA,SAMnB,KAI5BC,iBAAkBC,WAAaC,MAAM,CACjCP,KAAMM,WAAaE,IAAI,IAAIC,SAAS,8BACpCR,QAASK,WAAaE,IAAI,IAC1BN,MAAOI,WAAaE,IAAI,IACxBL,MAAOG,WAAaE,IAAI,IAAIC,SAAS,2BACrCL,QAASE,WAAaE,IAAI,KAAKC,SAAS,8BAG5CC,aAnBiC,SAmBpBC,GAETC,IAAMC,KAAK,gCAAiC,CAACT,QAASO,IACjDG,MAAK,SAAAC,GACFA,EAAIC,OAAO,aAEdC,OAAM,SAAAC,GACHA,EAAId,QAAQ,YA1BFN,EAhC1B,WAEI,OACI,oCACA,kBAAC,IAAD,CAAYqB,UAAU,kBAClB,uBAAGA,UAAW,gBAAd,8CACA,kBAAC,IAAD,CAAMA,UAAU,QACZ,kBAAC,IAAD,CAAOnB,KAAM,OAAQoB,YAAa,QAASC,KAAM,OAAQF,UAAU,qBAGnE,kBAAC,IAAD,CAAOnB,KAAM,UAAWoB,YAAa,WAAYC,KAAM,OAAQF,UAAU,wBAGzE,kBAAC,IAAD,CAAOnB,KAAM,QAASoB,YAAa,QAASC,KAAM,QAASF,UAAU,sBAGrE,kBAAC,IAAD,CAAOnB,KAAM,QAASoB,YAAa,SAAUC,KAAM,QAASF,UAAU,sBAGtE,kBAAC,IAAD,CAAOnB,KAAM,UAAWoB,YAAa,WAAYE,MAAO,WAAYD,KAAM,OAAQF,UAAU,wBAE5F,4BAAQE,KAAM,SAAUF,UAAU,cAAlC,WAIR,uBAAGA,UAAU,UAAb,0CACA,kBAAC,IAAD,CAAKA,UAAU,QAAQI,IAAKC,WAuCrB3B","file":"static/js/6.8dcbbecd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trees.289d4ded.svg\";","import React from 'react'\r\nimport * as Yup from 'yup';\r\nimport {Field, Form, withFormik} from \"formik\"\r\nimport axios from 'axios';\r\nimport { StyledForm } from '../styles';\r\nimport Trees from '../assets/Trees.svg';\r\nimport SVG from 'react-inlinesvg';\r\n\r\nfunction ContactForm() {\r\n    \r\n    return (\r\n        <>\r\n        <StyledForm className=\"form-container\">\r\n            <p className= \"form-heading\">Contact me directly with your opportunity.</p>\r\n            <Form className=\"form\">\r\n                <Field name={\"name\"} placeholder={\"Name*\"} type={\"text\"} className=\"name-field field\"/>\r\n\r\n                \r\n                <Field name={\"company\"} placeholder={\"Company*\"} type={\"text\"} className=\"company-field field\"/>\r\n\r\n                \r\n                <Field name={\"phone\"} placeholder={\"Phone\"} type={\"phone\"} className=\"phone-field field\"/>\r\n\r\n               \r\n                <Field name={\"email\"} placeholder={\"Email*\"} type={\"email\"} className=\"email-field field\"/>\r\n\r\n                \r\n                <Field name={\"message\"} placeholder={\"Message*\"} input={\"textarea\"} type={\"text\"} className=\"message-field field\"/>\r\n\r\n                <button type={\"submit\"} className=\"submit-btn\">\r\n                    Submit\r\n                </button>\r\n            </Form>\r\n        <p className=\"footer\">Designed and Developed by Blake Prouty</p>\r\n        <SVG className=\"trees\" src={Trees} />\r\n        </StyledForm>\r\n        </>\r\n    )\r\n}\r\n\r\nconst FormikContactForm = withFormik({\r\n    mapPropsToValues({name, company, phone, email, message}) {\r\n        return {\r\n            name: name || '',\r\n            company: company || '',\r\n            phone: phone || '',\r\n            email: email || '',\r\n            message: message || ''\r\n        }\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().max(50).required(\"Who do I owe the pleasure?\"),\r\n        company: Yup.string().max(70),\r\n        phone: Yup.string().max(11),\r\n        email: Yup.string().max(30).required('Please provide an email'),\r\n        message: Yup.string().max(300).required('Please include a message')\r\n    }),\r\n\r\n    handleSubmit(values) {\r\n        \r\n        axios.post('https://formspree.io/mqkapboa', {message: values})\r\n            .then(res => {\r\n                res.status=\"success\"\r\n            })\r\n            .catch(err => {\r\n                err.message=\"fail\"\r\n            });\r\n       \r\n    }\r\n\r\n})(ContactForm);\r\n\r\nexport default FormikContactForm;\r\n\r\n"],"sourceRoot":""}